{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\zly\\\\Desktop\\\\\\u524D\\u7AEF\\u5B66\\u4E60\\\\react-source\\\\04_Learn_Log\\\\src\\\\Components\\\\LogsForm\\\\LogsForm.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { Card } from '../UI/Card/Card';\nimport './LogsForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const LogsForm = () => {\n  _s();\n  // let inputDate = \"\"\n  // let inputDesc = \"\"\n  // let inputTime = 0\n  const [inputDate, setInputDate] = useState(\"\");\n  const [inputDesc, setInputDesc] = useState(\"\");\n  const [inputTime, setInputTime] = useState(\"\");\n\n  /*当表单项发生变化时，获取用户输入的内容*/\n  // 创建一个响应函数，监听表单项的变化\n  const dateChangeHanlder = e => {\n    setInputDate(e.target.value);\n  };\n  const timeChangeHanlder = e => {\n    setInputTime(e.target.value);\n  };\n  const descChangeHanlder = e => {\n    // 事件对象中保存了当前事件触发时的所有信息\n    // e.target 执行的是触发事件的对象（DOM对象）\n    // console.log(\"desc发生了变化\")\n    // 获取到当前触发事件的对象\n    setInputDesc(e.target.value);\n  };\n  // 在React中，通过表单不需要自行提交 而是要通过React提交\n  const formSubmitHandler = e => {\n    e.preventDefault();\n    const newLog = {\n      date: new Date(inputDate),\n      desc: inputDesc,\n      time: +inputTime\n    };\n    /*提交对象后如何清空表单中的旧数据  现在这种表单，在React我们成为非受控组件*/\n    console.log(newLog);\n    /*我们可以将表单中的数据存储到state中，然后将state设置为表单项的value值，然后当表单项发生变化时，state会随之变化，反正，state发生变化时，表单项也会发生变化*/\n    // 清空表单项\n    setInputDate('');\n    setInputDesc('');\n    setInputTime('');\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"logs-Form\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"date\",\n          children: \"\\u65E5\\u671F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"date\",\n          type: \"date\",\n          onChange: dateChangeHanlder,\n          value: inputDate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"desc\",\n          children: \"\\u5185\\u5BB9\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: descChangeHanlder,\n          id: \"desc\",\n          type: \"text\",\n          value: inputDesc\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"time\",\n          children: \"\\u65F6\\u957F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"time\",\n          type: \"number\",\n          onChange: timeChangeHanlder,\n          value: inputTime\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-btn\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: formSubmitHandler,\n          children: \"\\u6DFB\\u52A0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(LogsForm, \"hml6ErdEPvyZDt9MM8jL7cqp7Qk=\");\n_c = LogsForm;\nvar _c;\n$RefreshReg$(_c, \"LogsForm\");","map":{"version":3,"names":["useState","Card","jsxDEV","_jsxDEV","LogsForm","_s","inputDate","setInputDate","inputDesc","setInputDesc","inputTime","setInputTime","dateChangeHanlder","e","target","value","timeChangeHanlder","descChangeHanlder","formSubmitHandler","preventDefault","newLog","date","Date","desc","time","console","log","className","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","id","type","onChange","onClick","_c","$RefreshReg$"],"sources":["C:/Users/zly/Desktop/前端学习/react-source/04_Learn_Log/src/Components/LogsForm/LogsForm.js"],"sourcesContent":["import { useState } from 'react'\r\nimport { Card } from '../UI/Card/Card'\r\nimport './LogsForm.css'\r\n\r\nexport const LogsForm = () => {\r\n  // let inputDate = \"\"\r\n  // let inputDesc = \"\"\r\n  // let inputTime = 0\r\n  const [inputDate,setInputDate] = useState(\"\")\r\n  const [inputDesc,setInputDesc] = useState(\"\")\r\n  const [inputTime,setInputTime] = useState(\"\")\r\n\r\n  /*当表单项发生变化时，获取用户输入的内容*/\r\n  // 创建一个响应函数，监听表单项的变化\r\n  const dateChangeHanlder = (e) => {\r\n    setInputDate(e.target.value)\r\n  }\r\n  const timeChangeHanlder = (e) => {\r\n    setInputTime(e.target.value)\r\n  }\r\n\r\n  const descChangeHanlder = (e)=>{\r\n    // 事件对象中保存了当前事件触发时的所有信息\r\n    // e.target 执行的是触发事件的对象（DOM对象）\r\n    // console.log(\"desc发生了变化\")\r\n    // 获取到当前触发事件的对象\r\n    setInputDesc(e.target.value)\r\n  }\r\n  // 在React中，通过表单不需要自行提交 而是要通过React提交\r\n  const formSubmitHandler = (e)=>{\r\n    e.preventDefault()\r\n    const newLog = {\r\n      date: new Date(inputDate),\r\n      desc: inputDesc,\r\n      time: +inputTime\r\n    }\r\n    /*提交对象后如何清空表单中的旧数据  现在这种表单，在React我们成为非受控组件*/\r\n    console.log(newLog)\r\n    /*我们可以将表单中的数据存储到state中，然后将state设置为表单项的value值，然后当表单项发生变化时，state会随之变化，反正，state发生变化时，表单项也会发生变化*/\r\n    // 清空表单项\r\n    setInputDate('')\r\n    setInputDesc('')\r\n    setInputTime('')\r\n  }\r\n  return (\r\n    <Card className = \"logs-Form\">\r\n      <form>\r\n        <div className='form-item'>\r\n          <label htmlFor='date'>日期</label>\r\n          <input id=\"date\" type='date' onChange={dateChangeHanlder} value={inputDate}></input>\r\n        </div>\r\n        <div className='form-item'>\r\n          <label htmlFor='desc'>内容</label>\r\n          <input onChange={descChangeHanlder} id=\"desc\" type='text' value={inputDesc}></input>\r\n        </div>\r\n        <div className='form-item'>\r\n          <label htmlFor='time'>时长</label>\r\n          <input id=\"time\" type='number' onChange={timeChangeHanlder} value={inputTime}></input>\r\n        </div>\r\n        <div className='form-btn'>\r\n          <button onClick={formSubmitHandler}>添加</button>\r\n        </div>\r\n      </form>\r\n    </Card>\r\n  )\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}